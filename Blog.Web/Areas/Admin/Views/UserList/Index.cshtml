@{
    ViewData["Title"] = "Admin Rol Ekleme";
}

<div class="main-content">
    <div class="page-content">
        <div class="container-fluid">
            <!-- start page title -->
            <div class="row">
                <div class="col-12">
                    <div class="page-title-box d-flex align-items-center justify-content-between">
                        <h4 class="mb-0">Roller</h4>

                    </div>
                </div>
            </div>
            <!-- end page title -->

            <div class="row">
                <div class="col-12">
                    <div class="card bg-light text-dark">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-11">
                                    <box-icon name="tag" color="dark" size="sm" animation="tada"></box-icon> Roller
                                </div>
                                <div class="col-1 text-end">
                                    <a id="btnAdd" href="#" class="btn btn-outline-primary"> Yeni Rol Ekle</a>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table id="tblTags" class="table table-editable table-nowrap align-middle">
                                    <thead>
                                        <tr>
                                            <th>Rol Adı</th>
                                            <th>Rol Açıklaması</th>
                                            <th>İşlemler</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <input type="hidden" id="roleId" />

            <div class="modal-body">
                <div class="mb-3 row">
                    <label class="form-label">Rol Adı: </label>
                    <input type="text" id="roleName" placeholder="Lütfen Rol Adı giriniz" class="form-control" required />
                    <span id="roleName-error" style="color:red; display:none;">Rol Adı alanı boş bırakılamaz.</span>
                </div>
                <div class="mb-3 row">
                    <label class="form-label">Rol Açıklaması: </label>
                    <input type="text" id="description" placeholder="Lütfen Rol Açıklamasını giriniz" class="form-control" required />
                    <span id="description-error" style="color:red; display:none;">Alan boş bırakılamaz.</span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <button type="button" id="btnSave" class="btn btn-primary">Kaydet</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // DataTable initialization for roles
            var table = $('#tblTags').DataTable({
                ajax: {
                    url: '/Admin/UserList/GetAllRolesAsync', // Doğru URL
                    dataSrc: '',
                    error: function (xhr, error, thrown) {
                        console.error('Ajax Error', error, thrown);
                        Swal.fire('Error', 'Error loading roles', 'error');
                    }
                },
                columns: [
                    { data: 'roleName', title: 'Role Name' },
                    { data: 'description', title: 'Description' },
                    {
                        data: null,
                        title: 'Actions',
                        render: function (data, type, row) {
                            return `
                                <a href="#" class="btn btn-sm btn-warning editRole" data-id="${row.id}">Edit</a>
                                <a href="#" class="btn btn-sm btn-danger deleteRole" data-id="${row.id}">Delete</a>
                            `;
                        }
                    }
                ]
            });

            // Yeni Rol Ekleme Butonuna Tıklama
            $('#btnAdd').on('click', function () {
                $('#modalTitle').text("Yeni Rol Ekle");
                $('#roleId').val("");
                $('#roleName').val("");
                $('#description').val("");
                $('#modal').modal('show');
            });

            // Kaydet Butonu Tıklama - Hem Ekleme hem Güncelleme için kullanılır
            $(document).on('click', '#btnSave', function () {
                var roleId = $('#roleId').val();
                var roleName = $('#roleName').val();
                var description = $('#description').val();

                // Validation
                if (roleName.trim() === "") {
                    $('#roleName-error').show();
                    return;
                }
                if (description.trim() === "") {
                    $('#description-error').show();
                    return;
                }

                var ajaxUrl = roleId === "" ? "/Admin/UserList/CreateRole" : "/Admin/UserList/UpdateRoleAsync";
                var requestData = JSON.stringify({
                    roleId: roleId,
                    roleName: roleName,
                    description: description
                });

                // AJAX ile rol kaydetme (Ekleme veya Güncelleme)
                $.ajax({
                    type: "POST",
                    url: ajaxUrl,
                    contentType: 'application/json',
                    data: requestData,
                    success: function (response) {
                        $('#modal').modal('hide');
                        $('#tblTags').DataTable().ajax.reload();
                        Swal.fire('Success', roleId === "" ? 'Role added successfully' : 'Role updated successfully', 'success');
                    },
                    error: function () {
                        Swal.fire('Error', 'Error processing request', 'error');
                    }
                });
            });

            // Düzenleme Butonuna Tıklama
            $(document).on('click', '.editRole', function () {
                var roleId = $(this).data('id');

                // Rolü Getir ve Formu Doldur
                $.ajax({
                    type: "GET",
                    url: "/Admin/UserList/GetRoleById", // Doğru URL
                    data: { roleId: roleId },
                    success: function (role) {
                        $('#modalTitle').text("Edit Role");
                        $('#roleId').val(role.id);
                        $('#roleName').val(role.roleName);
                        $('#description').val(role.description);
                        $('#modal').modal('show');
                    },
                    error: function () {
                        Swal.fire('Error', 'Error fetching role data', 'error');
                    }
                });
            });

            // Silme Butonuna Tıklama
            $(document).on('click', '.deleteRole', function () {
                var roleId = $(this).data('id');

                Swal.fire({
                    title: 'Are you sure?',
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // AJAX ile silme işlemi
                        $.ajax({
                            type: "POST",
                            url: "/Admin/UserList/DeleteAsyncRoles", // Doğru URL
                            contentType: 'application/json',
                            data: JSON.stringify({ roleId: roleId }),
                            success: function (response) {
                                $('#tblTags').DataTable().ajax.reload();
                                Swal.fire('Deleted!', 'Role deleted successfully.', 'success');
                            },
                            error: function () {
                                Swal.fire('Error', 'Error deleting role', 'error');
                            }
                        });
                    }
                });
            });
        });

    </script>
}
