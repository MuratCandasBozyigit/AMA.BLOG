@model Blog.Core.Models.PostEditViewModel

<h1 class="text-center my-4">Postu Düzenle</h1>

<form enctype="multipart/form-data" class="p-4 bg-light rounded shadow-sm" id="postEditForm" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Post.Id" id="postId" />

    <div class="form-group">
        <label asp-for="Post.Title" class="font-weight-bold"></label>
        <input id="title" asp-for="Post.Title" class="form-control" placeholder="Başlık girin" />
        <span asp-validation-for="Post.Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Post.Content" class="font-weight-bold"></label>
        <textarea id="content" asp-for="Post.Content" class="form-control" rows="5" placeholder="İçeriği girin"></textarea>
        <span asp-validation-for="Post.Content" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Mevcut Resim</label>
        @if (!string.IsNullOrEmpty(Model.Post.ImagePath))
        {
            <div>
                <img src="@Url.Content(Model.Post.ImagePath)" alt="Mevcut Resim" class="img-fluid mb-2" style="max-height: 200px;" />
            </div>
        }
        else
        {
            <p>Hiç resim yüklenmemiş.</p>
        }
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Yeni Resim Yükle</label>
        <input type="file" id="image" name="image" class="form-control-file" />
        <small class="form-text text-muted">Mevcut resmi değiştirmek için yeni bir resim yükleyin.</small>
    </div>

    <div class="form-group">
        <label id="category" class="font-weight-bold">Kategori Seçin</label>
        <select asp-for="Post.CategoryId" class="form-control" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))"></select>
    </div>

    <button type="submit" id="btnSave" class="btn btn-primary btn-block">Kaydet</button>
</form>

<div class="mt-3 text-center">
    <a asp-action="Index" class="btn btn-warning">Geri dön</a>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            $.ajaxSetup({
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            });

            $('#btnSave').click(function (e) {
                e.preventDefault();

                var formData = new FormData($('#postEditForm')[0]);
                let isValid = true;

                if (!$('#title').val()) {
                    Swal.fire('Hata', 'Başlık boş olamaz!', 'error');
                    isValid = false;
                }

                if (!$('#content').val()) {
                    Swal.fire('Hata', 'İçerik boş olamaz!', 'error');
                    isValid = false;
                }

                if (!isValid) {
                    return;
                }

                $.ajax({
                    type: 'POST',
                    url: '/Admin/Post/Edit/' + $('#postId').val(),
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire('Başarı', response.message, 'success').then(function () {
                                window.location.href = "/Admin/Post/Index"; // Yönlendirme
                            });
                        } else {
                            Swal.fire('Hata', response.message, 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Hata', 'Güncelleme sırasında bir hata oluştu', 'error');
                    }
                });
            });
        });
    </script>
}














@* @section Scripts {
    <script>
        $(document).ready(function () {

            $(".error-message").hide();
            $('#tblPosts').on('click', function () {
                var id = $(this).data('id');
                $.ajax({
                    url: "/Admin/Post/GetById?id=" + id,
                    success: function (res) {
                        $('#title').val(res.title);
                        $('#content').val(res.content);
                        $('#category').val(res.categoryId); // categoryId kullanılmalı
                    }
                });
            });
            // Post kaydetme işlemi
            $('#btnSave').click(function () {
                var post = {
                    id: $('#postId').val(),
                    title: $('#title').val(),
                    content: $('#content').val(),
                    image: $('#image').val(), // Resim yolu sadece metin olarak alınıyor
                    categoryId: $('#category').val()
                };

                let isValid = true;

                // Form validasyonu
                if (!post.title) {
                    $('#title-error').show(); // Hata mesajı için bir element olmalı
                    isValid = false;
                } else {
                    $('#title-error').hide();
                }

                // Form geçerli değilse kaydetme işlemi durduruluyor
                if (!isValid) {
                    return;
                }

              

                    // AJAX ile kaydetme işlemi
                    $.ajax({
                        type: 'POST',
                        url: '/Admin/Post/Edit/' + post.id,
                        data: JSON.stringify(post),
                        contentType: 'application/json; charset=utf-8',
                        success: function (response) {
                            $("input, textarea").val("");
                            Swal.fire('Başarı ile kayıt yapıldı ', 'success');
                            // Tabloyu AJAX ile yeniden yüklemek için table nesnesini kullanın
                            if (typeof table !== 'undefined') {
                                table.ajax.reload();
                            }
                        },
                        error: function () {
                            Swal.fire('Hata', 'Kaydetme sırasında bir hata oluştu', 'error');
                        }
                    });
            });
        });
    </script>
}
 *@

@*  // // Form validasyonu
                // if (!tag.title) {
                //     $('#title-error').show(); // Hata mesajı için bir element olmalı
                //     isValid = false;
                // } else {
                //     $('#title-error').hide();
                // }

                // // Form geçerli değilse kaydetme işlemi durduruluyor
                // if (!isValid) {
                //     return;
                // } *@