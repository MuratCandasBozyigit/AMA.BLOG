@using System.Security.Claims
@model Blog.Core.Models.Category;

@{
    ViewData["Title"] = "Admin Kategori Yönetimi";
}

<h2>Kategoriler</h2>

<!-- Modal for Adding and Editing Categories -->
<div class="modal fade" id="modal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <input type="hidden" id="categoryId" />
            <div class="modal-body">
                <!-- Category Name -->
                <div class="mb-3">
                    <label for="name" class="form-label">Kategori Adı:</label>
                    <input type="text" id="name" placeholder="Lütfen Kategori Adı giriniz" class="form-control" required />
                    <span id="name-error" class="text-danger" style="display:none;">Alan boş bırakılamaz.</span>
                </div>

                <!-- Category Description -->
                <div class="mb-3">
                    <label for="description" class="form-label">Açıklama:</label>
                    <textarea id="description" placeholder="Lütfen Açıklama giriniz" class="form-control" required></textarea>
                    <span id="description-error" class="text-danger" style="display:none;">Alan boş bırakılamaz.</span>
                </div>

                <!-- Tag Selection -->
                <div class="mb-3">
                    <label for="tags" class="form-label">Etiketler:</label>
                    <select id="tags" multiple class="form-control" required>
                        @foreach (var tag in Model.Tags)
                        {
                            <option value="@tag.Id">@tag.Name</option>
                        }
                    </select>
                    <span id="tags-error" class="text-danger" style="display:none;">En az bir etiket seçilmelidir.</span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="btnSave" class="btn btn-primary">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- Categories Management Table -->
<div class="card bg-light text-dark">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><box-icon name="category" color="dark" size="sm" animation="tada"></box-icon> Kategorilerim</h5>
        <button id="btnAdd" class="btn btn-outline-primary">+ Yeni Kategori Ekle</button>
    </div>
    <div class="card-body">
        <table id="tblCategories" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Kategori Adı</th>
                    <th>Açıklama</th>
                    <th>Slug</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                <!-- DataTable will populate this section -->
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize and reset form values
            function resetForm() {
                $("#categoryId").val("");
                $("#name").val("");
                $("#description").val("");
                $("#tags").val([]); // Reset the tags selection
                $(".text-danger").hide();
            }

            // Initialize DataTable for categories
            var table = $('#tblCategories').DataTable({
                ajax: {
                    url: '/Admin/Category/GetAllCategories',
                    dataSrc: '',
                    error: function (xhr, error, thrown) {
                        console.error('Ajax Error:', error, thrown);
                        Swal.fire('Hata', 'Kategoriler yüklenirken bir sorun oluştu.', 'error');
                    }
                },
                columns: [
                    { data: 'name', title: 'Kategori Adı' },
                    { data: 'description', title: 'Açıklama' },
                    { data: 'slug', title: 'Slug' },
                    {
                        data: null,
                        title: 'İşlemler',
                        render: function (data, type, row) {
                            return `
                                        <a href="#" class="btn btn-sm btn-warning editCategory" data-id="${row.id}">Düzenle</a>
                                        <a href="#" class="btn btn-sm btn-danger deleteCategory" data-id="${row.id}">Sil</a>`;
                        }
                    }
                ]
            });

            // Open the modal for adding a new category
            $('#btnAdd').click(function () {
                $('#modalTitle').text('Yeni Kategori Ekle');
                $('#btnSave').text('Ekle');
                resetForm();
                $('#modal').modal('show');
            });

            $('#tblCategories').on('click', '.editCategory', function () {
                var id = $(this).data('id');
                $.get(`/Admin/Category/GetById/${id}`, function (category) {
                    $('#modalTitle').text('Kategori Düzenle');
                    $('#btnSave').text('Düzenle');
                    $("#categoryId").val(category.id);
                    $("#name").val(category.name);
                    $("#description").val(category.description);
                    $('#tags').val(category.tags.map(tag => tag.id)); // Select corresponding tags
                    $('#modal').modal('show');
                });
            });

            $('#tblCategories').on('click', '.deleteCategory', function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: 'Sil',
                    text: 'Bu kategoriyi silmek istediğinize emin misiniz?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Evet, sil!',
                    cancelButtonText: 'Hayır'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: `/Admin/Category/Delete/${id}`,
                            type: 'DELETE',
                            success: function () {
                                Swal.fire('Silindi!', 'Kategori başarıyla silindi.', 'success');
                                table.ajax.reload();
                            },
                            error: function () {
                                Swal.fire('Hata!', 'Kategori silinirken bir hata oluştu.', 'error');
                            }
                        });
                    }
                });
            });

            // Save button event handler
            $('#btnSave').click(function () {
                var category = {
                    id: parseInt($("#categoryId").val()) || 0,
                    name: $("#name").val(),
                    description: $("#description").val(),
                    tags: $("#tags").val().map(tagId => ({ id: tagId })) // Tag objelerini oluşturma
                };

                // Önce Add metodunu çağır, eğer kategori mevcutsa (id varsa) Update metodunu çağır
                if (!category.id) {
                    // Kategori ekle
                    $.ajax({
                        url: '/Admin/Category/Add',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(category),
                        success: function (result) {
                            Swal.fire('Başarılı!', 'Kategori başarıyla eklendi.', 'success');
                            table.ajax.reload();
                            $('#modal').modal('hide');
                        },
                        error: function (xhr) {
                            var errors = xhr.responseJSON.errors;
                            if (errors) {
                                if (errors.name) {
                                    $("#name-error").text(errors.name[0]).show();
                                }
                                if (errors.description) {
                                    $("#description-error").text(errors.description[0]).show();
                                }
                                if (errors.tags) {
                                    $("#tags-error").text(errors.tags[0]).show();
                                }
                            } else {
                                Swal.fire('Hata!', 'Bir hata oluştu. Lütfen tekrar deneyin.', 'error');
                            }
                        }
                    });
                } else {
                    // Kategori güncelle
                    $.ajax({
                        url: `/Admin/Category/Update/${category.id}`,
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(category),
                        success: function (result) {
                            Swal.fire('Başarılı!', 'Kategori başarıyla güncellendi.', 'success');
                            table.ajax.reload();
                            $('#modal').modal('hide');
                        },
                        error: function (xhr) {
                            var errors = xhr.responseJSON.errors;
                            if (errors) {
                                if (errors.name) {
                                    $("#name-error").text(errors.name[0]).show();
                                }
                                if (errors.description) {
                                    $("#description-error").text(errors.description[0]).show();
                                }
                                if (errors.tags) {
                                    $("#tags-error").text(errors.tags[0]).show();
                                }
                            } else {
                                Swal.fire('Hata!', 'Bir hata oluştu. Lütfen tekrar deneyin.', 'error');
                            }
                        }
                    });
                }
            });

        });
    </script>
}
