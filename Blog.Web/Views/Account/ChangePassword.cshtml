@using Blog.Core.ViewModels;
@model ChangePasswordViewModel;
@{
    ViewData["Title"] = "ChangePassword";
    Layout = "/Views/Shared/_AccountLayout.cshtml";
}

<div class="account-container">
    <div class="account-box">
        <h2 class="text-center mb-4">ChangePassword</h2>
        <form asp-action="ChangePassword" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" readonly>
            </div>
            <div class="mb-3">
                <label asp-for="NewPassword" class="form-label"></label>
                <input asp-for="NewPassword" class="form-control">
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="ConfirmNewPassword" class="form-label"></label>
                <input asp-for="ConfirmNewPassword" class="form-control">
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
            </div>



            <input type="submit" value="Submit" class="btn btn-success p-2 w-100" />

            <div class="text-center mt-2">
                <a asp-controller="Account" asp-action="VerifyEmail" class="text-decoration-none mt-3">Back</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }

}