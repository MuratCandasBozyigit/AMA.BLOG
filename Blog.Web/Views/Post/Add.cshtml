@using System.Security.Claims
@{
    ViewData["Title"] = "Konu";
}

<h2>Konu</h2>

<div class="col-12">
    <div class="modal fade" id="modal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle"></h5>
                    <button type="button" class="btn-close emptyValue" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3 row">
                        <label class="form-label">Konu Başlığı: </label>
                        <input type="text" id="title" placeholder="Lütfen konu başlığı giriniz" class="form-control" required />
                        <span id="title-error" style="color:red; display:none;">Alan boş bırakılamaz.</span>
                    </div>
                    <div class="mb-3 row">
                        <label class="form-label">Konu içeriği: </label>
                        <textarea rows="2" id="content" placeholder="Konu içeriğini giriniz" class="form-control" required></textarea>
                        <span id="content-error" style="color:red; display:none;">Alan boş bırakılamaz.</span>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary emptyValue" data-bs-dismiss="modal">Kapat</button>
                        <button type="button" id="btnSave" class="btn btn-primary">Kaydet</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-gradient-success text-white">
            <div class="row">
                <div class="col-11">
                    <box-icon name="car" color="white" size="sm" animation="tada"></box-icon> Renklerim
                </div>
                <div class="col-1 text-end">
                    <a id="btnAdd" href="#" class="btn btn-outline-dark">+ Yeni Renk</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <table id="tblColor" class="table table-hover table-striped table-bordered"></table>
        </div>
    </div>
</div>

@section Scripts {
    @*   <script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script> *@
    <script>
        $(document).ready(function () {
            $("input,textarea").val("");
            $(".error-message").hide();
        });

        var table = $('#tblPosts').DataTable({
            ajax: {
                url: 'Post/Add/Add',
                dataSrc: ''
            },
            columns: [
                { data: 'title', title: 'Başlık' },
                { data: 'content', title'İçerik'},
                {
                    data: null, title: 'İşlemler', render: function (data, type, row) {
                        return `
                                                            <a href="#" class="btn btn-sm btn-warning editTitle" data-id="${row.guid}">Düzenle</a>
                                                            <a href="#" class="btn btn-sm btn-danger deleteTitle" data-id="${row.guid}">Sil</a>
                                                  `;
                    }
                }

            ]
        }
                        });
        // Yeni Başlık ekle butonuna tıklayınca
        $('#btnAdd').click(function () {
            $('#modalTitle').text('Yeni Başlık Ekle');
            $('#btnSave').text('Ekle');
            $('#modal').modal('show');
        });

        // Başlık düzenleme işlemi
        $('#tblPosts').on('click', '.editTitle', function () {
            var id = $(this).data('id');
            $.ajax({
                url: "Post/GetById/" + id,
                success: function (res) {
                    $('#title').val(res.title);
                    $('#content').val(res.content);

                    $('#modalTitle').text('Başlık Düzenle');
                    $('#btnSave').text('Güncelle');
                    $('#modal').modal('show');
                },
                error: function () {
                    Swal.fire('Hata', 'Başlık verisi yüklenirken bir sorun oluştu.', 'error');
                }
            });
        });

        // Başlık silme işlemi
        $('#tblPosts').on('click', '.deleteTitle', function () {
            var id = $(this).data('id');
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu başlık kalıcı olarak silinecek!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, sil!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "DELETE",
                        url: "Post/Delete/" + id,
                        success: function () {
                            table.ajax.reload();
                            Swal.fire('Silindi!', 'Başlık başarıyla silindi.', 'success');
                        },
                        error: function () {
                            Swal.fire('Hata', 'Başlık silinirken bir sorun oluştu.', 'error');
                        }
                    });
                }
            });
        });

        // Başlık kaydetme/güncelleme işlemi
        $('#btnSave').click(function () {
            var trucker = {
                name: $('#title').val(),
                surname: $('#content').val(),

            };

            // Alan boş bırakıldığında hata mesajı göster
            let isValid = true;
            if (!content) {
                $('#content-error').show();
                isValid = false;
            } else {
                $('#content-error').hide();
            }
            if (!title) {
                $('#title-error').show();
                isValid = false;
            } else {
                $('#title-error').hide();
            }


            if (!isValid) {
                return;
            }

            var url = $('#btnSave').text() === 'Ekle' ? 'Post/Add' : 'Post/Update';
            var method = $('#btnSave').text() === 'Ekle' ? 'POST' : 'PUT';

            $.ajax({
                type: method,
                url: url,
                data: JSON.stringify(post),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $('#modal').modal('hide');
                    table.ajax.reload();
                    Swal.fire('Başarılı!', 'Başlık başarıyla kaydedildi.', 'success');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire('Hata', 'Başlık kaydedilirken bir sorun oluştu. Detaylar: ' + errorThrown, 'error');
                }
            });
        });

    </script>
}